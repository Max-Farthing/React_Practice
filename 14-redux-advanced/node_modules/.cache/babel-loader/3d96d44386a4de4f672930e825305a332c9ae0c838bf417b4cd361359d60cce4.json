{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart tutorial'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://test-13ee9-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sending cart successfully'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart failed'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","sendCartData","cart","dispatch","showNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error"],"sources":["C:/Users/maxfa/OneDrive/Desktop/ReactPractice/React_Practice/14-redux-advanced/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n        dispatch(uiActions.showNotification({\r\n            status: 'pending',\r\n            title: 'Sending...',\r\n            message: 'Sending cart tutorial',\r\n          }));\r\n\r\n          const sendRequest = async () => {\r\n            const response = await fetch(\r\n                'https://test-13ee9-default-rtdb.firebaseio.com/cart.json',\r\n                {\r\n                  method: 'PUT',\r\n                  body: JSON.stringify(cart)\r\n                }\r\n              );\r\n        \r\n              if (!response.ok) {\r\n                throw new Error('Sending cart data failed');\r\n              }\r\n          }\r\n\r\n          try {\r\n            await sendRequest();\r\n            dispatch(uiActions.showNotification({\r\n                status: 'success',\r\n                title: 'Success!',\r\n                message: 'Sending cart successfully',\r\n            }));\r\n          } catch(error) {\r\n            dispatch(uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error!',\r\n                message: 'Sending cart failed',\r\n            }));\r\n          }\r\n          \r\n    };\r\n};"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOC,QAAQ,IAAK;IACvBA,QAAQ,CAACH,SAAS,CAACI,gBAAgB,CAAC;MAChCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;IAEH,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,0DAA0D,EAC1D;QACEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;MAC3B,CACF,CAAC;MAED,IAAI,CAACO,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACJ,CAAC;IAED,IAAI;MACF,MAAMR,WAAW,CAAC,CAAC;MACnBL,QAAQ,CAACH,SAAS,CAACI,gBAAgB,CAAC;QAChCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAMU,KAAK,EAAE;MACbd,QAAQ,CAACH,SAAS,CAACI,gBAAgB,CAAC;QAChCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACL;EAEN,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}